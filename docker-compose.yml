version: '3'

services:
  # Core application services
  laravel-template:
    build:
      context: ./
      dockerfile: laravel.dockerfile
      args:
        - WITH_XDEBUG=true
        - MEMORY_LIMIT=2G
    env_file: ./.docker/.env
    restart: unless-stopped
    volumes:
      - ./application:/var/www/html/
      - ./.docker/.laravel:/root

  laravel:
    extends: laravel-template
    depends_on:
      - db
      - mongo
      - mailpit

  queue:
    extends: laravel-template
    command: "php artisan queue:listen -v --tries=2"
    depends_on:
      - db
      - mailpit

  web:
    build:
      context: ./
      dockerfile: nginx.dockerfile
    restart: unless-stopped
    ports:
      - "35080:80"
    environment:
      - PHP_SERVER="laravel:9000"
    volumes:
      - ./application:/var/www/html/
      - ./nginx.conf:/etc/nginx/templates/default.conf.template
    depends_on:
      - laravel

  db:
    image: mysql:8.0
    restart: unless-stopped
    environment:
      - MYSQL_DATABASE=laravel
      - MYSQL_ROOT_PASSWORD=laravel
    ports:
      - "35081:3306"
    volumes:
      - ./.docker/.mysql:/var/lib/mysql

  jsreport:
    image: jsreport/jsreport:4.3.0
    restart: unless-stopped
    ports:
      - "33082:5488"
    volumes:
      - ./.docker/.jsreport:/app/data

  mongo:
    image: mongo:7.0.2
    container_name: mongo
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=root
    restart: unless-stopped
    ports:
      - "35017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./.docker/mongodb/db_dump.gz:/docker-entrypoint-initdb.d/db_dump.gz
    command: [ --auth ]

  # Application testing
  selenium:
    image: 'selenium/standalone-chrome'
    profiles:
      - test
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    volumes:
      - '/dev/shm:/dev/shm'

  db-testing:
    image: mysql:8.0
    profiles:
      - test
    environment:
      - MYSQL_DATABASE=laraveltesting
      - MYSQL_ROOT_PASSWORD=laravel
    ports:
      - "35083:3306"

  # Developer tools
  mailpit:
    image: axllent/mailpit:v1.9
    restart: unless-stopped
    ports:
      - "35082:8025" # web ui

  vite:
    image: node:20-alpine
    working_dir: /usr/src/app
    profiles:
      - vite
    restart: "no"
    ports:
      - "35174:35174"
    volumes:
      - ./application:/usr/src/app/
    command:
      npm run dev

  npm:
    image: node:20-alpine
    working_dir: /usr/src/app
    profiles:
      - npm
    restart: "no"
    volumes:
      - ./application:/usr/src/app/
    command:
      npm install
volumes:
  mongodb_data:
